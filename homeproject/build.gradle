

if(isModule.toBoolean()){
    apply plugin: 'com.android.application'
}else {
    apply plugin: 'com.android.library'
}
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            if (isModule.toBoolean()) {
                manifest.srcFile 'src/main/java/module/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                java{//集成模式下剔除module
                    exclude "module/**"
                }
            }
        }
    }
//    dataBinding {
//        enabled = true
//    }
}

//kapt {
//    arguments {
//        arg("AROUTER_MODULE_NAME", project.getName())
//    }
//}
dependencies {
    testImplementation 'junit:junit:4.12'
    api project(':common')
    kapt rootProject.ext.dependencies["arouter-compiler"]
//    annotationProcessor rootProject.ext.dependencies["arouter-compiler"]
//task clean(type: Exec) {
//    ext.lockhunter = '\"C:\\LockHunter.exe\"'
//    def buildDir = file(new File("build"))
//    commandLine 'cmd', "$lockhunter", '/delete', '/silent', buildDir
//}
}

